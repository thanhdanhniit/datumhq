{"version":3,"sources":["webpack:///./src/components/SharedComponents/Platform.js","webpack:///./src/platformPics.js","webpack:///./src/components/MultipleImageAndTextComboSmallest.js"],"names":["useStaticQuery","AmazonWebServices","Azure","GoogleCloudPlatform","IBMCloud","MuleSoft","OpenShift","valueData","title","svg","childImageSharp","fluid","src","h2","style","textAlign","padding","theme","space","FlexWrapper","wrap","width","p","MultipleImageAndTextComboSmallest","data","StyledDiv","styled","div","boxShadows","Label","Heading","h4","MultipleImageAndTextCombo","props","map","eachProperty","index","key","bottom","position","top","transform","alt","delay"],"mappings":"6KAMe,qBACX,MCJAA,yBAAe,cDKXC,EADJ,EACIA,kBACAC,EAFJ,EAEIA,MACAC,EAHJ,EAGIA,oBACAC,EAJJ,EAIIA,SACAC,EALJ,EAKIA,SACAC,EANJ,EAMIA,UAGEC,EAAY,CACd,CACIC,MAAO,sBACPC,IAAKR,EAAkBS,gBAAgBC,MAAMC,KAEjD,CACIJ,MAAO,kBACPC,IAAKP,EAAMQ,gBAAgBC,MAAMC,KAErC,CACIJ,MAAO,wBACPC,IAAKN,EAAoBO,gBAAgBC,MAAMC,KAEnD,CACIJ,MAAO,YACPC,IAAKL,EAASM,gBAAgBC,MAAMC,KAExC,CACIJ,MAAO,oBACPC,IAAKJ,EAASK,gBAAgBC,MAAMC,KAExC,CACIJ,MAAO,mBACPC,IAAKH,EAAUI,gBAAgBC,MAAMC,MAI7C,OACI,oCACI,kBAAC,UAAQC,GAAT,CACIC,MACI,CACIC,UAAW,SACXC,QAAYC,QAAMC,MAAM,GAAjB,SAJnB,mBAQA,kBAACC,EAAA,EAAD,CACIL,MAAO,CAACC,UAAW,UACnBK,KAAM,QAEN,kBAAC,MAAD,CACIC,MAAO,CAAC,EAAG,EAAG,GACdC,EAAG,CAAC,EAAG,EAAG,IAEV,kBAACC,EAAA,EAAD,CAAmCC,KAAMjB,S,oIEvDvDkB,EAAYC,UAAOC,IAAV,yPAKCV,QAAMW,WAAW,GAKfX,QAAMW,WAAW,IAI7BC,EAAQH,kBAAOI,UAAQC,GAAfL,CAAH,iGAECT,QAAMC,MAAM,GACJD,QAAMC,MAAM,IA2CjBc,IAxCmB,SAAAC,GAChC,IAAQT,EAASS,EAATT,KACR,OACE,oCACE,kBAAC,IAAD,CACEV,MAAO,CACLC,UAAW,UAEbK,KAAM,QAELI,EAAKU,KAAI,SAACC,EAAcC,GACvB,OACE,kBAAC,MAAD,CAAKC,IAAKF,EAAa3B,MAAOa,MAAO,CAAC,EAAI,EAAG,EAAI,EAAG,EAAI,IACtD,kBAAC,IAAD,CAAMiB,QAAM,GACV,kBAACb,EAAD,KAEE,yBACEX,MAAO,CACLyB,SAAU,WACVC,IAAK,MACLC,UAAW,oBAEbjC,MAAO2B,EAAa3B,MACpBkC,IAAKP,EAAa3B,MAClBI,IAAKuB,EAAa1B,QAKxB,kBAAC,IAAD,CAAMkC,MAAO,KACX,kBAACd,EAAD,KAAQM,EAAa3B","file":"7-c3af290b256c692c2e09.js","sourcesContent":["import React from \"react\";\nimport {Box, Heading, theme} from \"@mechatronick/datum-design-system\"\nimport MultipleImageAndTextComboSmallest from \"../MultipleImageAndTextComboSmallest\";\nimport FlexWrapper from \"../FlexWrapper\";\nimport {usePlatformPicsHook} from \"../../platformPics\"\n\nexport default () => {\n    const {\n        AmazonWebServices,\n        Azure,\n        GoogleCloudPlatform,\n        IBMCloud,\n        MuleSoft,\n        OpenShift\n    } = usePlatformPicsHook();\n\n    const valueData = [\n        {\n            title: \"Amazon Web Services\",\n            svg: AmazonWebServices.childImageSharp.fluid.src\n        },\n        {\n            title: \"Microsoft Azure\",\n            svg: Azure.childImageSharp.fluid.src\n        },\n        {\n            title: \"Google Cloud Platform\",\n            svg: GoogleCloudPlatform.childImageSharp.fluid.src\n        },\n        {\n            title: \"IBM Cloud\",\n            svg: IBMCloud.childImageSharp.fluid.src\n        },\n        {\n            title: \"MuleSoft Anypoint\",\n            svg: MuleSoft.childImageSharp.fluid.src\n        },\n        {\n            title: \"Redhat OpenShift\",\n            svg: OpenShift.childImageSharp.fluid.src\n        }\n    ];\n\n    return (\n        <>\n            <Heading.h2\n                style={\n                    {\n                        textAlign: \"center\",\n                        padding: `${theme.space[4]}px 0`\n                    }\n                }\n            >Cloud Platforms</Heading.h2>\n            <FlexWrapper\n                style={{textAlign: \"center\"}}\n                wrap={\"wrap\"}\n            >\n                <Box\n                    width={[1, 1, 1]}\n                    p={[2, 2, 3]}\n                >\n                    <MultipleImageAndTextComboSmallest data={valueData}/>\n                </Box>\n            </FlexWrapper>\n        </>\n    )\n}","import {graphql, useStaticQuery} from \"gatsby\"\n\nexport const usePlatformPicsHook = () => (\n    useStaticQuery(\n        graphql`\n            fragment squareImage100 on File {\n                childImageSharp {\n                    fluid(maxWidth: 90) {\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n\n            query {\n                AmazonWebServices: file(relativePath: { eq: \"platform/AmazonWebServices.png\" }) {\n                    ...squareImage100\n                }\n                Azure: file(relativePath: { eq: \"platform/Azure.png\" }) {\n                    ...squareImage100\n                }\n                GoogleCloudPlatform: file(relativePath: { eq: \"platform/GoogleCloudPlatform.png\" }) {\n                    ...squareImage100\n                }\n                IBMCloud: file(relativePath: { eq: \"platform/IBMCloud.png\" }) {\n                    ...squareImage100\n                }\n                MuleSoft: file(relativePath: { eq: \"platform/MuleSoft.png\" }) {\n                    ...squareImage100\n                }\n                OpenShift: file(relativePath: { eq: \"platform/OpenShift.png\" }) {\n                    ...squareImage100\n                }\n            }\n        `\n    )\n);","import FlexWrapper from \"./FlexWrapper\";\nimport { Box, Heading, theme } from \"@mechatronick/datum-design-system\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Fade from \"react-reveal/Fade\";\n\nconst StyledDiv = styled.div`\n  height: 100px;\n  width: 100px;\n  margin: 0 auto;\n  filter: grayscale(70%);\n  box-shadow: ${theme.boxShadows[0]};\n  transition: all 0.4s ease;\n  &:hover {\n    transition: all 0.4s ease;\n    filter: none;\n    box-shadow: ${theme.boxShadows[2]};\n  }\n`;\n\nconst Label = styled(Heading.h4)`\n  line-height: 1.2;\n  margin: ${theme.space[2]}px auto;\n  padding-bottom: ${theme.space[3]}px;\n`;\n\nconst MultipleImageAndTextCombo = props => {\n  const { data } = props;\n  return (\n    <>\n      <FlexWrapper\n        style={{\n          textAlign: \"center\",\n        }}\n        wrap={\"wrap\"}\n      >\n        {data.map((eachProperty, index) => {\n          return (\n            <Box key={eachProperty.title} width={[1 / 3, 1 / 4, 1 / 6]}>\n              <Fade bottom>\n                <StyledDiv>\n\n                  <img\n                    style={{\n                      position: \"relative\",\n                      top: \"50%\",\n                      transform: \"translateY(-50%)\",\n                    }}\n                    title={eachProperty.title}\n                    alt={eachProperty.title}\n                    src={eachProperty.svg}\n                  />\n\n                </StyledDiv>\n              </Fade>\n              <Fade delay={300}>\n                <Label>{eachProperty.title}</Label>\n              </Fade>\n            </Box>\n          );\n        })}\n      </FlexWrapper>\n    </>\n  );\n};\n\nexport default MultipleImageAndTextCombo;\n"],"sourceRoot":""}