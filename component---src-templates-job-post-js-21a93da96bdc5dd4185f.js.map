{"version":3,"sources":["webpack:///./src/components/Loading.js","webpack:///./src/templates/job-post.js"],"names":["Loading","style","backgroundColor","zIndex","height","width","position","top","left","Nav","Loadable","loader","loading","Header","SubscribeFooter","Footer","JobPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","keywords","pathname","listStyle","itemScope","itemType","padding","theme","space","itemProp","color","fontWeight","date","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","to","fields","slug","rel","paddingRight"],"mappings":"4FAAA,yBAgBeA,IAdC,kBACd,yBACEC,MAAO,CACLC,gBAAiB,QACjBC,OAAQ,KACRC,OAAQ,QACRC,MAAO,QACPC,SAAU,QACVC,IAAK,IACLC,KAAM,S,kCCXZ,wGASMC,EAAMC,IAAS,CACnBC,OAAQ,kBAAM,+DACdC,QAASZ,MAELa,EAASH,IAAS,CACtBC,OAAQ,kBAAM,wDACdC,QAASZ,MAELc,EAAkBJ,IAAS,CAC/BC,OAAQ,kBAAM,wDACdC,QAASZ,MAELe,EAASL,IAAS,CACtBC,OAAQ,kBAAM,wDACdC,QAASZ,MAwFIgB,UArFS,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,gBAAC,IAAD,CAAQR,SAAUA,EAAUM,MAAOH,GACjC,gBAAC,IAAD,CACEG,MAAOL,EAAKQ,YAAYH,MACxBI,SAAU,CAAC,OAAD,iBAIVC,SAAS,SAGX,gBAACpB,EAAD,MACA,gBAACI,EAAD,MAEA,sBAAIZ,MAAO,CAAE6B,UAAU,SACrB,2BACEC,WAAS,EACTC,SAAS,4BACT/B,MAAO,CACLgC,QAAYC,QAAMC,MAAM,GAAjB,SAGT,8BACE,sBAAIC,SAAS,WAAWnC,MAAO,CAACoC,MAAO,UAAWC,WAAY,SAAUnB,EAAKQ,YAAYH,OACzF,qBAAGvB,MAAO,CAACoC,MAAO,YAAalB,EAAKQ,YAAYY,OAElD,2BACEC,wBAAyB,CAAEC,OAAQtB,EAAKuB,MACxCN,SAAS,iBAIb,2BACE,sBACEnC,MAAO,CACL0C,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACff,UAAU,OACVG,QAAS,IAGX,0BACGR,GACC,gBAAC,OAAD,CACAxB,MAAO,CACLoC,MAAO,UACPC,WAAY,QAEbQ,GAAIrB,EAASsB,OAAOC,KAAMC,IAAI,QAL/B,KAMKxB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,OAAD,CACEzB,MAAO,CACLoC,MAAO,UACPC,WAAY,OACZY,aAAc,IAEhBJ,GAAIpB,EAAKqB,OAAOC,KAChBC,IAAI,QAEHvB,EAAKC,YAAYH,MATpB,UAkBV,gBAACV,EAAD,MACA,gBAACC,EAAD","file":"component---src-templates-job-post-js-21a93da96bdc5dd4185f.js","sourcesContent":["import React from \"react\";\n\nconst Loading = () => (\n  <div\n    style={{\n      backgroundColor: \"white\",\n      zIndex: 9999,\n      height: \"100vh\",\n      width: \"100vw\",\n      position: \"fixed\",\n      top: \"0\",\n      left: \"0\",\n    }}\n  />\n);\n\nexport default Loading;\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\nimport Loadable from \"react-loadable\";\nimport Loading from \"../components/Loading\";\nimport {Heading, theme,} from \"@mechatronick/datum-design-system\";\n\nconst Nav = Loadable({\n  loader: () => import(\"../components/SharedComponents/Nav\"),\n  loading: Loading,\n});\nconst Header = Loadable({\n  loader: () => import(\"../components/about/Header\"),\n  loading: Loading,\n});\nconst SubscribeFooter = Loadable({\n  loader: () => import(\"../components/SharedComponents/SubscribeFooter\"),\n  loading: Loading,\n});\nconst Footer = Loadable({\n  loader: () => import(\"../components/SharedComponents/Footer\"),\n  loading: Loading,\n});\n\nconst JobPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        keywords={[\n          `jobs`,\n          `it consulting`,\n        ]}\n        pathname=\"jobs\"\n      />\n\n      <Nav/>\n      <Header/>\n\n      <ol style={{ listStyle: `none` }}>\n        <article\n          itemScope\n          itemType=\"http://schema.org/Article\"\n          style={{\n            padding: `${theme.space[4]}px 0`\n          }}\n        >\n          <header>\n            <h1 itemProp=\"headline\" style={{color: '#39A2DB', fontWeight: 'bold'}}>{post.frontmatter.title}</h1>\n            <p style={{color: '#053742'}}>{post.frontmatter.date}</p>\n          </header>\n          <section\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link\n                style={{\n                  color: '#F59C36',\n                  fontWeight: \"bold\"\n                }}\n                 to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link \n                  style={{\n                    color: '#F59C36',\n                    fontWeight: \"bold\",\n                    paddingRight: 15\n                  }}\n                  to={next.fields.slug} \n                  rel=\"next\"\n                >\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n\n      </ol>\n\n      <SubscribeFooter/>\n      <Footer/>\n    </Layout>\n  )\n}\n\nexport default JobPostTemplate\n\nexport const pageQuery = graphql`\n  query JobPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}