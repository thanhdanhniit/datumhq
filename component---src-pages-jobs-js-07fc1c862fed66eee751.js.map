{"version":3,"sources":["webpack:///./src/pages/jobs.js","webpack:///./src/components/Loading.js"],"names":["Nav","Loadable","loader","loading","Loading","Header","SubscribeFooter","Footer","JobIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","to","itemProp","color","date","dangerouslySetInnerHTML","__html","description","excerpt","backgroundColor","zIndex","height","width","position","top","left"],"mappings":"8FAAA,4FAQMA,EAAMC,IAAS,CACjBC,OAAQ,kBAAM,+DACdC,QAASC,MAELC,EAASJ,IAAS,CACtBC,OAAQ,kBAAM,wDACdC,QAASC,MAELE,EAAkBL,IAAS,CAC/BC,OAAQ,kBAAM,wDACdC,QAASC,MAELG,EAASN,IAAS,CACtBC,OAAQ,kBAAM,wDACdC,QAASC,MAsEEI,UAlEE,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,aACX,gBAACd,EAAD,MACA,gBAACK,EAAD,MAEA,gDAIA,gBAACC,EAAD,MACA,gBAACC,EAAD,OAMJ,gBAAC,IAAD,CAAQG,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,aACX,gBAACd,EAAD,MACA,gBAACK,EAAD,MAEA,sBAAIc,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,OAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,WAAWZ,MAAO,CAACa,MAAO,YAAalB,KAG1D,yBAAOK,MAAO,CAACa,MAAO,YAAaV,EAAKC,YAAYU,OAEtD,+BACE,qBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CN,SAAS,uBASvB,gBAACzB,EAAD,MACA,gBAACC,EAAD,S,kCCvFN,yBAgBeH,IAdC,kBACd,yBACEe,MAAO,CACLmB,gBAAiB,QACjBC,OAAQ,KACRC,OAAQ,QACRC,MAAO,QACPC,SAAU,QACVC,IAAK,IACLC,KAAM","file":"component---src-pages-jobs-js-07fc1c862fed66eee751.js","sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\";\nimport SEO from \"../components/SEO\";\nimport Loadable from \"react-loadable\";\nimport Loading from \"../components/Loading\";\n\nconst Nav = Loadable({\n    loader: () => import(\"../components/SharedComponents/Nav\"),\n    loading: Loading,\n  });\n  const Header = Loadable({\n    loader: () => import(\"../components/about/Header\"),\n    loading: Loading,\n  });\n  const SubscribeFooter = Loadable({\n    loader: () => import(\"../components/SharedComponents/SubscribeFooter\"),\n    loading: Loading,\n  });\n  const Footer = Loadable({\n    loader: () => import(\"../components/SharedComponents/Footer\"),\n    loading: Loading,\n  });\n  \n\nconst JobIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All jobs\" />\n        <Nav/>\n        <Header/>\n\n        <p>\n          No job posts found.\n        </p>\n\n        <SubscribeFooter/>\n        <Footer/>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All jobs\" />\n      <Nav/>\n      <Header/>\n\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\" style={{color: '#39A2DB'}}>{title}</span>\n                    </Link>\n                  </h2>\n                  <small style={{color: '#053742'}}>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n\n      <SubscribeFooter/>\n      <Footer/>\n    </Layout>\n  )\n}\n\nexport default JobIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n","import React from \"react\";\n\nconst Loading = () => (\n  <div\n    style={{\n      backgroundColor: \"white\",\n      zIndex: 9999,\n      height: \"100vh\",\n      width: \"100vw\",\n      position: \"fixed\",\n      top: \"0\",\n      left: \"0\",\n    }}\n  />\n);\n\nexport default Loading;\n"],"sourceRoot":""}